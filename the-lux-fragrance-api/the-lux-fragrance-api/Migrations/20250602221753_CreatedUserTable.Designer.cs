// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using the_lux_fragrance_api.Data;

#nullable disable

namespace the_lux_fragrance_api.Migrations
{
    [DbContext(typeof(CatalogoContext))]
    [Migration("20250602221753_CreatedUserTable")]
    partial class CreatedUserTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("the_lux_fragrance_api.Models.Catalogo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("VendedorId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("VendedorId");

                    b.ToTable("Catalogos");
                });

            modelBuilder.Entity("the_lux_fragrance_api.Models.CatalogoItem", b =>
                {
                    b.Property<int>("CatalogoId")
                        .HasColumnType("integer");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.HasKey("CatalogoId", "ItemId");

                    b.HasIndex("ItemId");

                    b.ToTable("CatalogoItens");
                });

            modelBuilder.Entity("the_lux_fragrance_api.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Categoria")
                        .HasColumnType("text");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<string>("ImagemPerfume")
                        .HasColumnType("text");

                    b.Property<string>("ImagemReferencia")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<decimal>("Preco")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Itens");
                });

            modelBuilder.Entity("the_lux_fragrance_api.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("the_lux_fragrance_api.Models.Vendedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<string>("Telefone")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Vendedores");
                });

            modelBuilder.Entity("the_lux_fragrance_api.Models.Catalogo", b =>
                {
                    b.HasOne("the_lux_fragrance_api.Models.Vendedor", "Vendedor")
                        .WithMany("Catalogos")
                        .HasForeignKey("VendedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vendedor");
                });

            modelBuilder.Entity("the_lux_fragrance_api.Models.CatalogoItem", b =>
                {
                    b.HasOne("the_lux_fragrance_api.Models.Catalogo", "Catalogo")
                        .WithMany("CatalogoItens")
                        .HasForeignKey("CatalogoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("the_lux_fragrance_api.Models.Item", "Item")
                        .WithMany("CatalogoItens")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Catalogo");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("the_lux_fragrance_api.Models.Catalogo", b =>
                {
                    b.Navigation("CatalogoItens");
                });

            modelBuilder.Entity("the_lux_fragrance_api.Models.Item", b =>
                {
                    b.Navigation("CatalogoItens");
                });

            modelBuilder.Entity("the_lux_fragrance_api.Models.Vendedor", b =>
                {
                    b.Navigation("Catalogos");
                });
#pragma warning restore 612, 618
        }
    }
}
